---
  # This role is about consumer installation

# This repository did not work on CentOS 8
#  - name: Enable epel repository
#    yum_repository:
#      name: epel
#      baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
#      enabled: yes
#      state: present
#      description: epel repostiory
#      gpgcheck: no
#    tags: [ install-deps ]

  - name: Install yum dependencies
    yum:
      name:
      - bzip2-devel
      - curl
      - gcc
      - gcc-c++
      - git
      - iptables-services
      - libaio
      - libffi-devel
      - make
      - openssl
      - openssl-devel
      - postgresql.x86_64
      - tar
      - unzip
      - wget
      - zlib-devel
    tags: [ install-deps ]

  - name: Install build tools
    yum:
      name: "@Development tools"
      state: present
    tags: [ install-deps ]

  - name: Install Python 3.7
    shell: |
      curl -OL https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz
      tar -xzf Python-3.7.7.tgz
      cd Python-3.7.7
      ./configure --enable-optimizations
      make altinstall
    args:
      creates: /usr/local/bin/python3.7
    tags: [ install-deps ]


  - name: Install nhmmer
    shell: |
      curl -OL http://eddylab.org/software/hmmer/hmmer-3.2.1.tar.gz
      tar -zxvf hmmer-3.2.1.tar.gz
      cd hmmer-3.2.1
      ./configure --prefix /usr/local
      make
      make install
      cd easel; make install
    args:
      creates: /usr/local/bin/nhmmer

  - name: Install Infernal
    shell: |
      curl -OL http://eddylab.org/infernal/infernal-1.1.3.tar.gz
      tar xf infernal-1.1.3.tar.gz
      cd infernal-1.1.3
      ./configure --prefix /usr/local
      make
      make install

  - name: Delete rfam directory
    file:
      path: /srv/sequence_search/consumer/rfam
      state: absent
    ignore_errors: yes
    tags: [ rfam ]

  - name: Create rfam directory
    file:
      path: /srv/sequence_search/consumer/rfam
      state: directory
      owner: centos
      group: centos
      mode: 0755
    tags: [ rfam ]

  - name: Install Rfam
    shell:
      chdir: /srv/sequence_search/consumer/rfam
      cmd: curl -OL http://ftp.ebi.ac.uk/pub/databases/Rfam/CURRENT/Rfam.cm.gz && gunzip Rfam.cm.gz
    tags: [ rfam ]

  - name: Create the cm binaries
    shell: /usr/local/bin/cmpress /srv/sequence_search/consumer/rfam/Rfam.cm
    tags: [ rfam ]

  - name: Delete cmsearch_tblout_deoverlap directory
    file:
      path: /srv/sequence_search/consumer/cmsearch_tblout_deoverlap
      state: absent
    ignore_errors: yes
    tags: [ deoverlap ]

  - name: Install cmsearch_tblout_deoverlap
    shell:
      chdir: /srv/sequence_search/consumer
      cmd: git clone https://github.com/nawrockie/cmsearch_tblout_deoverlap.git
    tags: [ deoverlap ]


  - name: Rsync aiohttp code
    synchronize:
      src: ../../../../sequence_search
      dest: /srv
      rsync_opts:
        - "--exclude=/sequence_search/consumer/databases"
        - "--exclude=/sequence_search/consumer/queries/*.fasta"
        - "--exclude=/sequence_search/consumer/results/*.fasta"
        - "--exclude=/sequence_search/consumer/infernal-queries"
        - "--exclude=/sequence_search/consumer/infernal-results"
        - "--exclude=/sequence_search/consumer/cmsearch_tblout_deoverlap"
        - "--exclude=/sequence_search/consumer/rfam"
        - "--exclude=/sequence_search/producer/static/rnacentral-sequence-search-embed"
    tags: [ rsync, quick ]


  - name: Delete logs directory
    file:
      path: /var/log/gunicorn
      state: absent
    ignore_errors: yes
    tags: [ logs ]

  - name: Create logs directory
    file:
      path: /var/log/gunicorn
      state: directory
      owner: centos
      group: centos
      mode: 0755
    tags: [ logs ]


  - name: Delete queries directory
    file:
      path: /srv/sequence_search/consumer/queries
      state: absent
    tags: [ queries, quick ]

  - name: Create queries directory
    file:
      path: /srv/sequence_search/consumer/queries
      state: directory
      owner: centos
      group: centos
      mode: 0755
    tags: [ queries, quick ]


  - name: Delete results directory
    file:
      path: /srv/sequence_search/consumer/results
      state: absent
    tags: [ results, quick ]

  - name: Create results directory
    file:
      path: /srv/sequence_search/consumer/results
      state: directory
      owner: centos
      group: centos
      mode: 0755
    tags: [ results, quick ]


  - name: Delete infernal queries directory
    file:
      path: /srv/sequence_search/consumer/infernal-queries
      state: absent
    tags: [ infernal-queries, quick ]

  - name: Create infernal queries directory
    file:
      path: /srv/sequence_search/consumer/infernal-queries
      state: directory
      owner: centos
      group: centos
      mode: 0755
    tags: [ infernal-queries, quick ]


  - name: Delete infernal results directory
    file:
      path: /srv/sequence_search/consumer/infernal-results
      state: absent
    tags: [ infernal-results, quick ]

  - name: Create infernal results directory
    file:
      path: /srv/sequence_search/consumer/infernal-results
      state: directory
      owner: centos
      group: centos
      mode: 0755
    tags: [ infernal-results, quick ]


  - name: Chown aiohttp code
    command: "chown -R centos:centos /srv/sequence_search"
    changed_when: false
    tags: [ quick ]

  - name: Chmod aiohttp code
    command: "chmod 755 /srv/sequence_search"
    tags: [ quick ]


  - name: Install pip3 requirements
    shell: /usr/local/bin/pip3.7 install -r requirements.txt
    args:
      chdir: /srv/sequence_search
    tags: [ pip-requirements ]


  - name: Create a symbolic link to sequence databases
    file:
      src: /nfs
      dest: /srv/sequence_search/consumer/databases
      state: link


  - name: Get running processes
#    shell: "sudo kill $(ps -ef | grep -v grep | grep -w gunicorn | awk '{print $2}')"
    shell: "sudo kill $(ps -ef | grep -v grep | grep -w consumer | awk '{print $2}')"
    register: running_processes
    ignore_errors: yes
    tags: [ restart, quick ]

  - name: Kill running processes
    shell: "kill {{ item }}"
    with_items: "{{ running_processes.stdout_lines }}"
    tags: [ restart, quick ]

  # copied over from: https://stackoverflow.com/questions/46515704/how-to-kill-a-running-process-using-ansible
  - wait_for:
      path: "/proc/{{ item }}/status"
      state: absent
    with_items: "{{ running_processes.stdout_lines }}"
    ignore_errors: yes
    register: killed_processes
    tags: [ restart, quick ]

  - name: Force kill stuck processes
    shell: "kill -9 {{ item }}"
    with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"
    tags: [ restart, quick ]

  - wait_for:
      path: "/proc/{{ item }}/status"
      state: absent
    with_items: "{{ running_processes.stdout_lines }}"
    ignore_errors: yes
    tags: [ restart, quick ]

  - name: Run consumer service
    shell:
      chdir: /srv
#      cmd: /usr/local/bin/gunicorn consumer.main:app --daemon --bind 0.0.0.0:8000 --worker-class aiohttp.worker.GunicornWebWorker --access-logfile /var/log/gunicorn/access_log --error-logfile /var/log/gunicorn/error_log --env ENVIRONMENT=PRODUCTION --log-level=DEBUG
      cmd: ENVIRONMENT=PRODUCTION nohup /usr/local/bin/python3.7 -m sequence_search.consumer &> /var/log/gunicorn/access_log &
    tags: [ restart, quick ]
